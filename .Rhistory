scale_colour_manual(values = Donor_colors) +
scale_x_continuous(breaks = c(1:2),
labels = c("acute GVHD", "non-GVHD"), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MissenseMis_D$x, 1, round)), outlier.shape = NA, alpha = 0)
AgeDiff_range
beeswarm_MissenseMis_AD <-  beeswarm(NumVar ~ GVHD, data = MiHA_Age_table,
method = 'swarm',pwcol = AgeDiff_range,
spacing = 0.4)[, c(1,2, 4, 6)]
colnames(beeswarm_MissenseMis_AD) <- c("x", "y", "AgeDifferenceRange", "GVHD")
ggplot(beeswarm_MissenseMis_AD, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = GVHD), size = 3, alpha = 0.6) +
geom_jitter(width = 0.1, aes(color = AgeDifferenceRange), size = 3, alpha = 0.7) +
scale_colour_manual(values = AgeDiff_colors) +
scale_x_continuous(breaks = c(1:2),
labels = c("acute GVHD", "non-GVHD"), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MissenseMis_AD$x, 1, round)), outlier.shape = NA, alpha = 0)
Miss_Age_table <- table(MiHA_Age_table$AgeDiff_range, MiHA_Age_table$NumVar)
chisq.test(Miss_Age_table)
Miss_DAge_table <- table(MiHA_Age_table$DAge_range, MiHA_Age_table$NumVar)
chisq.test(Miss_DAge_table)
Miss_RAge_table <- table(MiHA_Age_table$RAge_range, MiHA_Age_table$NumVar)
chisq.test(Miss_RAge_table)
Unrestricted_AgeDiff_table <- table(MiHA_Age_table$AgeDiff_range, MiHA_Age_table$HLA.Unrestricted)
chisq.test(Unrestricted_AgeDiff_table)
Unrestricted_DAge_table <- table(MiHA_Age_table$DAge_range, MiHA_Age_table$HLA.Unrestricted)
chisq.test(Unrestricted_DAge_table)
Unrestricted_RAge_table <- table(MiHA_Age_table$RAge_range, MiHA_Age_table$HLA.Unrestricted)
chisq.test(Unrestricted_RAge_table)
Restricted_ADiff_table <- table(MiHA_Age_table$AgeDiff_range, MiHA_Age_table$HLA.Restricted)
chisq.test(Restricted_ADiff_table)
Restricted_Dage_table <- table(MiHA_Age_table$DAge_range, MiHA_Age_table$HLA.Restricted)
chisq.test(Restricted_Dage_table)
Restricted_Rage_table <- table(MiHA_Age_table$RAge_range, MiHA_Age_table$HLA.Restricted)
chisq.test(Restricted_Rage_table)
beeswarm_ResMiHA_all_R <- beeswarm(HLA.Restricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = RAge_range,
spacing = 0.3)[, c(1,2, 4, 6)]
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.1, aes(color = RecipientAgeRange), size = 4, alpha = 0.6) +
scale_colour_manual(values = Recipient_colors) +
scale_x_continuous(breaks = c(1:2),
labels = c("acute GVHD", "non-GVHD"), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
colnames(beeswarm_ResMiHA_all_R) <- c("x", "y", "GVHD", "GVHD")
beeswarm_ResMiHA_all_R <- beeswarm(HLA.Restricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = GVHD,
spacing = 0.3)[, c(1,2, 4, 6)]
beeswarm_ResMiHA_all_R <- beeswarm(HLA.Restricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.numeric(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
MiHA_Age_table$GVHD
beeswarm_ResMiHA_all_R <- beeswarm(HLA.Restricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_ResMiHA_all_R) <- c("x", "y", "GVHD", "GVHD")
GVHD_color <- c("#0571b0", "#008837")
colnames(beeswarm_ResMiHA_all_R) <- c("x", "y", "GVHD", "GVHD")
colnames(beeswarm_ResMiHA_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.1, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:2),
labels = c("acute GVHD", "non-GVHD"), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
GVHD_color <- c("#ca0020", "#0571b0")#, "#008837")
beeswarm_ResMiHA_all_R <- beeswarm(HLA.Restricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_ResMiHA_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.1, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:2),
labels = c("acute GVHD", "non-GVHD"), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs"))
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.1, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:2),
labels = as.character(levels(MiHA_Age_table$RAge_range)), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
levels(MiHA_Age_table$RAge_range)
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.1, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_ResMiHA_all_D <- beeswarm(HLA.Restricted ~ DAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_ResMiHA_all_D) <- c("x", "y", "GVHD", "DAge_range")
ggplot(beeswarm_ResMiHA_all_D, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$DAge_range))),
labels = levels(MiHA_Age_table$DAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_D$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_ResMiHA_all_AD <- beeswarm(HLA.Restricted ~ AgeDiff_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_ResMiHA_all_AD) <- c("x", "y", "GVHD", "AgeDiff_range")
ggplot(beeswarm_ResMiHA_all_AD, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
levels(MiHA_Age_table$AgeDiff_range)
length(levels(MiHA_Age_table$AgeDiff_range))
beeswarm_ResMiHA_all_AD <- beeswarm(HLA.Restricted ~ AgeDiff_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_ResMiHA_all_AD) <- c("x", "y", "GVHD", "AgeDiff_range")
ggplot(beeswarm_ResMiHA_all_AD, aes(x, y)) +
xlab("") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_ResMiHA_all_AD, aes(x, y)) +
xlab("Age difference") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_ResMiHA_all_D, aes(x, y)) +
xlab("Donor age range") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$DAge_range))),
labels = levels(MiHA_Age_table$DAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_D$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_ResMiHA_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_ResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_ResMiHA_all_R <- beeswarm(HLA.Unrestricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_UnResMiHA_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_UnResMiHA_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Mismatched HLA Unrestricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_UnResMiHA_all_R <- beeswarm(HLA.Unrestricted ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_UnResMiHA_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_UnResMiHA_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Mismatched HLA Unrestricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_UnResMiHA_all_D <- beeswarm(HLA.Unrestricted ~ DAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_UnResMiHA_all_D) <- c("x", "y", "GVHD", "DAge_range")
ggplot(beeswarm_UnResMiHA_all_D, aes(x, y)) +
xlab("Donor age range") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$DAge_range))),
labels = levels(MiHA_Age_table$DAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_D$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_UnResMiHA_all_AD <- beeswarm(HLA.Unrestricted ~ AgeDiff_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_UnResMiHA_all_AD) <- c("x", "y", "GVHD", "AgeDiff_range")
ggplot(beeswarm_UnResMiHA_all_AD, aes(x, y)) +
xlab("Age difference") +
scale_y_continuous(expression("#Mismatched HLA Restricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_UnResMiHA_all_AD, aes(x, y)) +
xlab("Age difference") +
scale_y_continuous(expression("#Mismatched HLA Unrestricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_UnResMiHA_all_AD <- beeswarm(HLA.Unrestricted ~ AgeDiff_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_UnResMiHA_all_AD) <- c("x", "y", "GVHD", "AgeDiff_range")
ggplot(beeswarm_UnResMiHA_all_AD, aes(x, y)) +
xlab("Age difference") +
scale_y_continuous(expression("#Mismatched HLA Unrestricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_UnResMiHA_all_D <- beeswarm(HLA.Unrestricted ~ DAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_UnResMiHA_all_D) <- c("x", "y", "GVHD", "DAge_range")
ggplot(beeswarm_UnResMiHA_all_D, aes(x, y)) +
xlab("Donor age range") +
scale_y_continuous(expression("#Mismatched HLA Unrestricted Known MiHA SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$DAge_range))),
labels = levels(MiHA_Age_table$DAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_UnResMiHA_all_D$x, 1, round)), outlier.shape = NA, alpha = 0) # +
colnames(MiHA_Age_table)
GVHD_color <- c("#ca0020", "#0571b0")#, "#008837")
beeswarm_MisMismatch_all_R <- beeswarm(NumVar ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_MisMismatch_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_MisMismatch_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MisMismatch_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
ggplot(beeswarm_MisMismatch_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 3, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MisMismatch_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_MisMismatch_all_R <- beeswarm(NumVar ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.2)[, c(1,2, 4, 6)]
colnames(beeswarm_MisMismatch_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_MisMismatch_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 3, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MisMismatch_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_MisMismatch_all_R <- beeswarm(NumVar ~ RAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_MisMismatch_all_R) <- c("x", "y", "GVHD", "RAge_range")
ggplot(beeswarm_MisMismatch_all_R, aes(x, y)) +
xlab("Recipient age range") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 3, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$RAge_range))),
labels = levels(MiHA_Age_table$RAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MisMismatch_all_R$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_MisMismatch_all_D <- beeswarm(NumVar ~ DAge_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_MisMismatch_all_D) <- c("x", "y", "GVHD", "DAge_range")
ggplot(beeswarm_MisMismatch_all_D, aes(x, y)) +
xlab("Donor age range") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$DAge_range))),
labels = levels(MiHA_Age_table$DAge_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MisMismatch_all_D$x, 1, round)), outlier.shape = NA, alpha = 0) # +
beeswarm_MisMismatch_all_AD <- beeswarm(NumVar ~ AgeDiff_range, data = MiHA_Age_table,
method = 'swarm', pwcol = as.factor(GVHD),
spacing = 0.3)[, c(1,2, 4, 6)]
colnames(beeswarm_MisMismatch_all_AD) <- c("x", "y", "GVHD", "AgeDiff_range")
ggplot(beeswarm_MisMismatch_all_AD, aes(x, y)) +
xlab("Age difference") +
scale_y_continuous(expression("#Missense Mismathced SNPs")) +
#geom_point(aes(colour = RecipientAgeRange), size = 2, alpha = 0.5) +
geom_jitter(width = 0.05, aes(color = GVHD), size = 4, alpha = 0.6) +
scale_colour_manual(values = GVHD_color) +
scale_x_continuous(breaks = c(1:length(levels(MiHA_Age_table$AgeDiff_range))),
labels = levels(MiHA_Age_table$AgeDiff_range), expand = c(0, 0.05)) +
geom_boxplot(aes(x, y, group = round_any(beeswarm_MisMismatch_all_AD$x, 1, round)), outlier.shape = NA, alpha = 0) # +
source("utils/utility.R")
input.dir <- "../Data/"
output.dir <- "../R_Output/"
gwas.fn <- lapply(c(bed = 'bed', bim='bim', fam='fam', gds='gds', map='map'), function(n) sprintf("%s/22bed.%s", input.dir, n))
clinical.fn <- sprintf("%scldt.csv", input.dir)
onethou.fn <- lapply(c(ped='ped', nosex='nosex'), function(x) sprintf("%s22bed.%s", input.dir, x))
gwaa.fname <- sprintf("%s22bedOut.txt", output.dir)
library(snpStats)
genotypes <- read.plink(gwas.fn$bed, gwas.fn$bim, gwas.fn$fam, na.strings = ("-9"))
genotype <- genotypes$genotypes
print(genotype) # SnpMatrix with  1983 rows and  123536 columns
genoBim <- genotypes$map
colnames(genoBim) <- c("chr", "SNP", "gen.dist", "position", "A1", "A2")
print(head(genoBim))
rm(genotypes) # remove original reads, to free up space
clinical_avail.fn <- sprintf("%savailable_cases.csv", output.dir)
hla.fn <- sprintf("%savailable_cases_HLA.csv", output.dir)
Outcome_avail <- read.csv(clinical_avail.fn, stringsAsFactors = F)
HLA_tab <- read.csv(hla.fn, stringsAsFactors = F)
snpsum.col <- col.summary(genotype) # Summarize rows or columns of a snp matrix
print(head(snpsum.col))
callrate <- 0.95 # call rate
minor <- 0.01    # MAF
use_snp <- with(snpsum.col, (!is.na(MAF) & MAF > minor) & Call.rate >= callrate)
use_snp[is.na(use_snp)] <- FALSE
cat(ncol(genotype)-sum(use_snp), "SNPs will be removed due to low MAF or call rate.\n") # 32542 removed
genotype <- genotype[, use_snp]
snpsum.col <- snpsum.col[use_snp, ]
print(genotype) # 90994 SNPs left
library(SNPRelate)
library(plyr)
snpsum.row <- row.summary(genotype) # sample statistics (call.rate, heterozygosity)
MAF <- snpsum.col$MAF
callmatrix <- !is.na(genotype)
hetExp <- callmatrix %*% (2*MAF*(1-MAF))
hetObs <- with(snpsum.row, Heterozygosity * (ncol(genotype)) * Call.rate)
snpsum.row$hetF <- 1 - (hetObs/hetExp)
head(snpsum.row)
sampCall <- 0.95  # sample call rate cut-off
hetcutoff <- 0.1  # Inbreeding coefficient cut-off
use_sample <- with(snpsum.row, !is.na(Call.rate) & Call.rate > sampCall & abs(hetF) <= hetcutoff)
use_sample[is.na(use_sample)] <- FALSE
cat(nrow(genotype)-sum(use_sample), "subjects will be removed due to low sample call or inbreeding coefficient.\n")
genotype <- genotype[use_sample, ]
Outcome_avail <- filter_outcome(clinical_avail.fn, genotype)
ld.threshold <- 0.2  # LD cut-off
kin.threshold <- 0.1 # kinship cut-off
snpgdsBED2GDS(gwas.fn$bed, gwas.fn$fam, gwas.fn$bim, gwas.fn$gds)
genofile <- openfn.gds(gwas.fn$gds, readonly = F)
set.seed(1000)
geno.sample.ids <- rownames(genotype)
snp.ids <- colnames(genotype)
snpSUB <- snpgdsLDpruning(genofile, ld.threshold = ld.threshold,
sample.id = geno.sample.ids,
snp.id = snp.ids)
snpset.ibd <- unlist(snpSUB, use.names = F)
cat(length(snpset.ibd), "will be used in IBD analysis.\n") # 2566
ibd <- snpgdsIBDMoM(genofile, kinship = T,
sample.id = geno.sample.ids,
snp.id = snpset.ibd,
num.thread = 1)
ibdcoeff <- snpgdsIBDSelection(ibd)
head(ibdcoeff)
ibdcoeff <- ibdcoeff[ibdcoeff$kinship >= kin.threshold, ]
related.samples <- NULL
while(nrow(ibdcoeff)>0){
# count the number of occurrences of each and take the top one
sample.counts <- arrange(count(c(ibdcoeff$ID1, ibdcoeff$ID2)), -freq)
rm.sample <- sample.counts[1, 'x']
cat("Removing samples", as.character(rm.sample), "too closely related to", sample.counts[1, 'freq'], 'other samples.\n')
# remove from ibdcoeff adn add to the list
ibdcoeff <- ibdcoeff[ibdcoeff$ID1 != rm.sample & ibdcoeff$ID2 != rm.sample, ]
related.samples <- c(as.character(rm.sample), related.samples)
}
genotype <- genotype[!(rownames(genotype) %in% related.samples), ]
pca <- snpgdsPCA(genofile, sample.id = geno.sample.ids, snp.id = snpset.ibd, num.thread = 1)
pctab <- data.frame(sample.id = pca$sample.id,
PC1 = pca$eigenvect[, 1],
PC2 = pca$eigenvect[, 2],
stringsAsFactors = F)
plot(pctab$PC2, pctab$PC1, xlab = "Principal Component 2", ylab="Principal Component 1",
main = "Ancestry Plot")
cat(nrow(genotype)-sum(use_sample), "subjects will be removed due to low sample call or inbreeding coefficient.\n")
genotype
snpsum.col <- col.summary(genotype) # Summarize rows or columns of a snp matrix
print(head(snpsum.col))
callrate <- 0.95 # call rate
minor <- 0.01    # MAF
use_snp <- with(snpsum.col, (!is.na(MAF) & MAF > minor) & Call.rate >= callrate)
use_snp[is.na(use_snp)] <- FALSE
cat(ncol(genotype)-sum(use_snp), "SNPs will be removed due to low MAF or call rate.\n") # 32542 removed
source("utils/utility.R")
input.dir <- "../Data/"
output.dir <- "../R_Output/"
gwas.fn <- lapply(c(bed = 'bed', bim='bim', fam='fam', gds='gds', map='map'), function(n) sprintf("%s/22bed.%s", input.dir, n))
clinical.fn <- sprintf("%scldt.csv", input.dir)
onethou.fn <- lapply(c(ped='ped', nosex='nosex'), function(x) sprintf("%s22bed.%s", input.dir, x))
gwaa.fname <- sprintf("%s22bedOut.txt", output.dir)
library(snpStats)
genotypes <- read.plink(gwas.fn$bed, gwas.fn$bim, gwas.fn$fam, na.strings = ("-9"))
genotype <- genotypes$genotypes
print(genotype) # SnpMatrix with  1983 rows and  123536 columns
genoBim <- genotypes$map
colnames(genoBim) <- c("chr", "SNP", "gen.dist", "position", "A1", "A2")
print(head(genoBim))
rm(genotypes) # remove original reads, to free up space
clinical_avail.fn <- sprintf("%savailable_cases.csv", output.dir)
hla.fn <- sprintf("%savailable_cases_HLA.csv", output.dir)
Outcome_avail <- read.csv(clinical_avail.fn, stringsAsFactors = F)
HLA_tab <- read.csv(hla.fn, stringsAsFactors = F)
snpsum.col <- col.summary(genotype) # Summarize rows or columns of a snp matrix
print(head(snpsum.col))
callrate <- 0.95 # call rate
minor <- 0.01    # MAF
use_snp <- with(snpsum.col, (!is.na(MAF) & MAF > minor) & Call.rate >= callrate)
use_snp[is.na(use_snp)] <- FALSE
cat(ncol(genotype)-sum(use_snp), "SNPs will be removed due to low MAF or call rate.\n") # 32542 removed
genotype <- genotype[, use_snp]
snpsum.col <- snpsum.col[use_snp, ]
print(genotype) # 90994 SNPs left
library(SNPRelate)
library(plyr)
snpsum.row <- row.summary(genotype) # sample statistics (call.rate, heterozygosity)
MAF <- snpsum.col$MAF
callmatrix <- !is.na(genotype)
hetExp <- callmatrix %*% (2*MAF*(1-MAF))
hetObs <- with(snpsum.row, Heterozygosity * (ncol(genotype)) * Call.rate)
snpsum.row$hetF <- 1 - (hetObs/hetExp)
head(snpsum.row)
sampCall <- 0.95  # sample call rate cut-off
hetcutoff <- 0.1  # Inbreeding coefficient cut-off
use_sample <- with(snpsum.row, !is.na(Call.rate) & Call.rate > sampCall & abs(hetF) <= hetcutoff)
use_sample[is.na(use_sample)] <- FALSE
cat(nrow(genotype)-sum(use_sample), "subjects will be removed due to low sample call or inbreeding coefficient.\n")
genotype <- genotype[use_sample, ]
Outcome_avail <- filter_outcome(clinical_avail.fn, genotype)
ld.threshold <- 0.2  # LD cut-off
kin.threshold <- 0.1 # kinship cut-off
snpgdsBED2GDS(gwas.fn$bed, gwas.fn$fam, gwas.fn$bim, gwas.fn$gds)
genofile <- openfn.gds(gwas.fn$gds, readonly = F)
set.seed(1000)
geno.sample.ids <- rownames(genotype)
snp.ids <- colnames(genotype)
snpSUB <- snpgdsLDpruning(genofile, ld.threshold = ld.threshold,
sample.id = geno.sample.ids,
snp.id = snp.ids)
snpset.ibd <- unlist(snpSUB, use.names = F)
cat(length(snpset.ibd), "will be used in IBD analysis.\n") # 2566
install.packages("tidyverse")
source("utils/utility.R")
input.dir <- "../Data/"
output.dir <- "../R_Output/"
gwas.fn <- lapply(c(bed = 'bed', bim='bim', fam='fam', gds='gds', map='map'), function(n) sprintf("%s/22bed.%s", input.dir, n))
clinical.fn <- sprintf("%scldt.csv", input.dir)
onethou.fn <- lapply(c(ped='ped', nosex='nosex'), function(x) sprintf("%s22bed.%s", input.dir, x))
gwaa.fname <- sprintf("%s22bedOut.txt", output.dir)
library(snpStats)
genotypes <- read.plink(gwas.fn$bed, gwas.fn$bim, gwas.fn$fam, na.strings = ("-9"))
genotype <- genotypes$genotypes
print(genotype) # SnpMatrix with  1983 rows and  123536 columns
genoBim <- genotypes$map
colnames(genoBim) <- c("chr", "SNP", "gen.dist", "position", "A1", "A2")
print(head(genoBim))
rm(genotypes) # remove original reads, to free up space
