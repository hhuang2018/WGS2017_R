## handle the others in a generic way; maybe specialize later
my_minor <- NA
my_major <- NA
my_freq <- NA
}
my_pos <- tryCatch(
my_list$Assembly$Component$MapLoc$.attrs["physMapInt"],
error = function(e) {
my_list$Assembly$Component$MapLoc["physMapInt"]
}
)
if (is.null(my_pos)) my_pos <- NA
# Based one NCBI's response, the position data in their XML API output
# should be off by one when compared to web display. So we add one here
# to make them equivalent
#if (is.numeric(my_pos)) my_pos <- my_pos + 1
my_pos <- as.integer(my_pos) + 1
# Ancestral Allele
anc_all <- my_list$Sequence$.attrs['ancestralAllele']
anc_all <- if (is.na(anc_all)) NA else anc_all[[1]]
out[i, ] <- c(
SNPs[i], my_chr, my_snp, unname(my_snpClass),
unname(my_gene), paste0(unname(alleles), collapse = ","),
unname(my_major), unname(my_minor),
as.numeric(my_freq), as.integer(my_pos),
anc_all
)
}
for (nm in c("MAF", "BP")) {
out[, nm] <- as.numeric( out[, nm] )
}
return(out)
## NCBI limits to a maximum of 1 query per three seconds; we
## ensure that this limit is adhered to
Sys.sleep(3)
}
#' @export
#' @rdname NCBI_snp_query
ncbi_snp_query <- NCBI_snp_query
ncbi_snp_query("rs4845140")
library(httr)
install.packages(c("data.table", "openssl"))
library(httr)
source('utils/NCBI_snp_query.R')
ncbi_snp_query('rs4845140')
source('utils/NCBI_snp_query.R')
ncbi_snp_query('rs4845140')
cuf8 <- function(x) httr::content(x, "text", encoding = "UTF-8")
ncbi_snp_query('rs4845140')
library(XML)
ncbi_snp_query('rs4845140')
ncbi_snp_query('rs4845140')
install.packages("rsnps")
library(rsnps)
ncbi_snp_query('rs4845140')
genotypes('rs9939609', userid='1,6,8', df=TRUE)
genotypes('rs4845140', userid='1,6,8', df=TRUE)
install.packages("rentrez")
library(rentrez)
entrez_dbs()
entrez_db_summary("snp")
entrez_db_searchable("snp")
search_year <- function(year, term){
query <- paste(term, "AND (", year, "[PDAT])")
entrez_search(db="pubmed", term=query, retmax=0)$count
}
year <- 2008:2014
papers <- sapply(year, search_year, term="Connectome", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the Connectome")
year <- 2008:2017
papers <- sapply(year, search_year, term="Minor histocompatibility antigens", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the Minor histocompatibility antigens")
year <- 2008:2017
papers <- sapply(year, search_year, term="WGS", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the WGS")
year <- 2008:2017
papers <- sapply(year, search_year, term="gene gene interaction", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the gene gene interaction")
papers <- sapply(year, search_year, term="gene-gene interaction", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the gene-gene interaction")
papers <- sapply(year, search_year, term="gene interaction", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the gene interaction")
papers <- sapply(year, search_year, term="stem cell transplant", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the stem cell transplant")
papers <- sapply(year, search_year, term="CAR-T", USE.NAMES=FALSE)
plot(year, papers, type='b', main="The Rise of the CAR-T")
all_the_links <- entrez_link(dbfrom='gene', id=351, db='all')
all_the_links
all_the_links$links
all_the_links$links$gene_pmc[1:10]
all_the_links$links$gene_clinvar
gene_ids <- c(351, 11647)
linked_seq_ids <- entrez_link(dbfrom="gene", id=gene_ids, db="nuccore")
linked_transripts <- linked_seq_ids$links$gene_nuccore_refseqrna
head(linked_transripts)
all_recs <- entrez_fetch(db="nuccore", id=linked_transripts, rettype="fasta")
class(all_recs)
nchar(all_recs)
cat(strwrap(substr(all_recs, 1, 500)), sep="\n")
write(all_recs, file="my_transcripts.fasta")
Tt <- entrez_search(db="taxonomy", term="(Tetrahymena thermophila[ORGN]) AND Species[RANK]")
tax_rec <- entrez_fetch(db="taxonomy", id=Tt$ids, rettype="xml", parsed=TRUE)
class(tax_rec)
tax_list <- XML::xmlToList(tax_rec)
tax_list$Taxon$GeneticCode
tt_lineage <- tax_rec["//LineageEx/Taxon/ScientificName"]
tt_lineage[1:4]
XML::xpathSApply(tax_rec, "//LineageEx/Taxon/ScientificName", XML::xmlValue)
entrez_db_searchable("snp")
gene_search = entrez_search(db   = "gene",
term = "IL10[Gene Name]) AND (Homo sapiens[Organism])", retmax = 1)
geneId <- gene_search$ids
geneId
snp_links <- entrez_link(dbfrom='gene', id=geneId, db='snp')
length(snp_links$links$gene_snp)
head(snp_links$links$gene_snp)
snp_links
snp_links$links$gene_snp
snp_search = entrez_search(db = 'snp',
term = c("rs1800896", "rs1800871", "rs1800872"))
snp_search = entrez_search(db = 'snp',
term = "rs1800896[Reference SNP ID] OR rs1800871[Reference SNP ID] OR rs1800872[Reference SNP ID]")
snp_search
names(snp_search)
snp_search$count
snp_search$retmax
snp_search$QueryTranslation
snp_search$file
snp_search$ids
snp_ids <- snp_search$ids
gene_links <- entrez_link(dbfrom = 'snp', id =snp_ids, db = 'gene')
gene_links$links$snp_gene
uiu
geneName <- entrez_search(db = 'gene', term = paste0(snpGene_ID, "[uid]"))
gene_links <- entrez_link(dbfrom = 'snp', id =snp_ids, db = 'gene')
snpGene_ID <- gene_links$links$snp_gene
geneName <- entrez_search(db = 'gene', term = paste0(snpGene_ID, "[uid]"))
geneName
geneName$ids
geneName$count
geneName$file
geneName <- entrez_search(db = 'gene', term = paste0(snpGene_ID, "[uid]"), rettype = 'gene_table')
geneName$ids
geneName <- entrez_search(db = 'gene', term = paste0(snpGene_ID, "[uid]"),
rettype = 'gene_table',
retmode = 'text')
geneName <- entrez_search(db = 'gene', term = paste0(snpGene_ID, "[uid]"),
rettype = 'gene_table')
multi_snp_links <- entrez_link(dbfrom='gene', id=c("5728", "374654"), db='snp', by_id=TRUE)
lapply(multi_snp_links, function(x) head(x$links$gene_snp))
geneName
geneName$ids
geneName$file
geneName$QueryTranslation
geneName$file
geneName$count
geneName$ids
install.packages("org.Hs.eg.db")
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite("org.Hs.eg.db")
library(org.Hs.eg.db)
library(org.Hs.eg.db)
unlist(mget(x=geneName$ids,envir=org.Hs.egALIAS2EG))
x <- org.Hs.egCHR
mapped_genes <- mappedkeys(x)
len(mapped_genes)
length(mapped_genes)
head(mapped_genes)
x <- org.Hs.egGENENAME
mapped_genes <- mappedkeys(x)
unlist(mget(x=geneName$ids, envir=org.Hs.egGENENAME))
snpGene_ID
snpGene_name = unlist(mget(x=snpGene_ID, envir=org.Hs.egGENENAME))
snpGene_name
install.packages("HardyWeinberg")
install.packages("powerGWASinteraction")
library("powerGWASinteraction")
model = list()
model$prev = 0
model$prev = 0.001
power = 0.95
model = list()
model$prev = 0.001
powerGG(, power, model, caco, alpha, alpha1)
power <- 0.95
model <- list()
model$prev <- 0.001
power <- 0.95
model <- list()
model$prev <- 0.001
model$pGene1 <- 0.05
model$pGene2 <- 0.04
model$nSNP <- 1000
model$beta.LOR <- c(0.4, 0.3, 0.3)
alpha1 <- 0.05
powerGG(power = power, model = model, alpha1 = alpha1)
powerGG(n = n,
#power = power,
model = model, alpha1 = alpha1)
n <- 1000
powerGG(n = n,
#power = power,
model = model, alpha1 = alpha1)
snp_links$links$gene_snp_geneview
snp_links$links$gene_clinvar
snp_links$links$gene_snp # $gene_clinvar
length(snp_links$links$gene_snp)
all_the_links$links$gene_clinvar
res <- entrez_search(db = "clinvar", term = "BRCA1", retmax=10)
cv <- entrez_summary(db="clinvar", id=res$ids)
cv
extract_from_esummary(cv, "title", simplify=FALSE)
extract_from_esummary(cv, "trait_set")[1:2]
extract_from_esummary(cv, "gene_sort")
all_the_links$links$gene_clinvar
all_cv <- entrez_summary(db="clinvar", id=all_the_links$links$gene_clinvar)
all_cv
extract_from_esummary(all_cv, "gene_sort")
res <- entrez_search(db = "clinvar", term = "acute myeloid leukemia", retmax=10)
cv <- entrez_summary(db="clinvar", id=res$ids)
cv
extract_from_esummary(cv, "title", simplify=FALSE)
extract_from_esummary(cv, "trait_set")[1:2]
extract_from_esummary(cv, "gene_sort")
len(cv)
length(cv)
res <- entrez_search(db = "clinvar", term = "AML", retmax=10)
cv <- entrez_summary(db="clinvar", id=res$ids)
cv
extract_from_esummary(cv, "title", simplify=FALSE)
extract_from_esummary(cv, "trait_set")[1:2]
extract_from_esummary(cv, "gene_sort")
res <- entrez_search(db = "clinvar", term = "leukemia", retmax=10)
cv <- entrez_summary(db="clinvar", id=res$ids)
cv
extract_from_esummary(cv, "title", simplify=FALSE)
extract_from_esummary(cv, "trait_set")[1:2]
extract_from_esummary(cv, "gene_sort")
getMSigInfo('HALLMARK_COMPLEMENT')
library(MSigDB)
names(MSigDB)
head(names(MSigDB$HALLMARK))
head(MSigDB$HALLMARK$C2_CURATED)
head(names(MSigDB$C2_CURATED))
library(GeneGeneInteR)
data("gene.pair")
typeof(gene.pair)
source("https://bioconductor.org/biocLite.R")
biocLite("snpStats")
biocLite("snpMatrix")
gene.pair$Y
gene.pair$G1
head(gene.pair$G1)
library(rentrez)
entrez_dbs()
entrez_db_summary("snp")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (Homo Sapien[Organism])")
length(SnpList)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (Homo sapiens[Organism])")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (Homo sapiens[Organism])", retmax = 100)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (Homo sapiens[Organism])", retmax = 50)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (Homo sapiens[Organism])", retmax = 30)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (human[orgn])", retmax = 30)
length(SnpList$ids)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (human[orgn])", retmax = 50)
length(SnpList$ids)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (human[orgn])", retmax = 100)
length(SnpList$ids)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (human[orgn])", retmax = 10000)
length(SnpList$ids)
SnpList$file[0]
SnpList$file
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (human[orgn])", retmax = 10000, parsed_recs)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[Gene Name]) AND (human[orgn])", retmax = 10000, config = "Global MAF")
entrez_db_searchable("snp")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retmax = 10000, config = "https://www.ncbi.nlm.nih.gov/snp/")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retmax = 10000)
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retmax = 10)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retmax = 1000)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
pop_summ <- entrez_summary(db="snp", id="1518110")
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", ret, retmax = 50)
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 50, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=id)
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 100, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 150, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
pop_summ <- entrez_summary(db="snp", id=ids, retstart = 100)
extract_from_esummary(pop_summ, "global_maf")
pop_summ <- entrez_summary(db="snp", id=ids, retstart = 5)
extract_from_esummary(pop_summ, "global_maf")
pop_summ
pop_summ$`1042565634`
pop_summ$`1042565634`$uid
pop_summ$`1042565634`$snp_id
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 200, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 250, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 3000, retmax = 50)
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 300, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 350, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 400, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 450, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 500, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 550, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 6000, retmax = 50)
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 600, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 650, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 700, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 750, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 800, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = 850, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
for(id in 1:50:10000){
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = id, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
extract_from_esummary(pop_summ, "global_maf")
}
for(ind in 1:50:10000){
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = ind, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
print(extract_from_esummary(pop_summ, "global_maf"))
}
MAF = extract_from_esummary(pop_summ, "global_maf")
MAF
which(MAF != "")
for(ind in 1:50:10000){
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = ind, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
MAF = extract_from_esummary(pop_summ, "global_maf")
if(length(which(MAF != ""))){
idx = which(MAF != "")
print(MAF[idx])
}
}
ind
aa <- 1:50:10000
range(from=1, to=10, by =2)
seq(from =1 , to = 10, by = 2)
for(ind in seq(from=1, to=10000, by=50 )){
SnpList <- entrez_search(db   = "snp",
term = "(IL10RB[GENE]) AND (human[ORGN])", retstart = ind, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
MAF = extract_from_esummary(pop_summ, "global_maf")
if(length(which(MAF != ""))){
idx = which(MAF != "")
print(MAF[idx])
}
}
for(ind in seq(from=1, to=10000, by=50 )){
SnpList <- entrez_search(db   = "snp",
term = "(IL10[GENE]) AND (human[ORGN])", retstart = ind, retmax = 50)
length(SnpList$ids)
ids <- SnpList$ids
pop_summ <- entrez_summary(db="snp", id=ids)
MAF = extract_from_esummary(pop_summ, "global_maf")
if(length(which(MAF != ""))){
idx = which(MAF != "")
print(MAF[idx])
}
}
ind
ids
pop_summ
pop_summ$`3021093`$chr
pop_summ$`3021093`$snp3d
pop_summ$`3021093`$snp_class
pop_summ$`3021093`$snp_id_sort
pop_summ$`3021093`$snp_id
pop_summ$`3021093`$genes
pop_summ$`3021093`$global_population
pop_summ$`3021093`$global_samplesize
pop_summ$`1800896`$global_samplesize
pop_summ$`1800896`$global_population
pop_summ$`1800896`$global_maf
pop_summ$`1800896`$suspected
pop_summ$`1800896`$ss
pop_summ$`1800896`$lookup
pop_summ$`1800896`$validated
pop_summ$`1800896`$chrpos
pop_summ$`1800896`$docsum
