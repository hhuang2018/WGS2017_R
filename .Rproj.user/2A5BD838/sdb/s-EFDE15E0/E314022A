{
    "collab_server" : "",
    "contents" : "#require(snpStats)\n\nfileFp <- \"../../HLI/GeneData/\"\noutputFp <- \"../../HLI/GenotypeTables/\"\n\nGeneName <- 'IL10'\nfiles <- list.files(fileFp, pattern = paste0(\"\\\\\",GeneName, \".vcf$\"))\n\nload(\"../../HLI/Metadata/HLI_available_pairs_dis_table.RData\")\n\npairNum <- dim(Available_paired_table)[1]\n\nGeneGenoType_List <- data.frame(CHROM = character(0),\n                                POS = numeric(0),\n                                REF = character(0),\n                                ALT = character(0),\n                                ANN = character(0),\n                                CHRPOS = character(0),\n                                GT = character(0))\nfor(id in 1:pairNum){\n  \n  idx <- grep(paste0(\"_\", Available_paired_table$GroupID[id],\"_\"), files)\n  paired_GenoType <- data.frame(CHROM = character(0),\n                                POS = numeric(0),\n                                REF = character(0),\n                                ALT = character(0),\n                                GT = character(0),\n                                ANN = character(0),\n                                CHRPOS = character(0))\n  for(jd in 1:length(idx)){\n    Record <- read.delim(paste0(fileFp, files[idx[jd]]), sep = \"\\t\", header = F, stringsAsFactors = F)\n    colnames(Record) <- c(\"CHROM\", \"POS\", \"RS\", \"REF\", \"ALT\", \"QC\", \"FT\", \"ANN\", \"FORMAT\", \"GT\")\n    Record$ANN2 <- sapply(1:dim(Record)[1], function(x) strsplit(Record$ANN[x], \";\")[[1]][3])\n    Record$GT2 <- sapply(1:dim(Record)[1], function(x) paste0(sapply(strsplit(strsplit(Record$GT[x], \":\")[[1]][1],\"/\")[[1]], function(y) if(y==\"0\") Record$REF[x] else Record$ALT[x]), collapse = \"/\"))\n    type <- strsplit(files[idx[jd]], \"_\")[[1]][3]\n    \n    Record$CHRPOS <- sapply(1:dim(Record)[1], function(x) paste0(Record$CHROM[x], \"-\",Record$POS[x]))\n    if(length(paired_GenoType$CHROM) >0){\n      paired_GenoType$CHRPOS <- sapply(1:dim(paired_GenoType)[1], function(x) paste0(paired_GenoType$CHROM[x], \"-\",paired_GenoType$POS[x]))\n      for(kd in 1:dim(Record)[1]){\n        kdx <- which(paired_GenoType$CHRPOS %in% Record$CHRPOS[kd])\n        if(length(kdx) == 1){ \n          ## Donor_GenoType - Recipient_GenoType\n          ifelse(type == \"D\", paired_GenoType$GT[kdx] <- paste0(Record$GT2[kd], paired_GenoType$GT[kdx]), \n                 paired_GenoType$GT[kdx] <- paste0(paired_GenoType$GT[kdx], Record$GT2[kd]))\n        }else{\n          temp_GenoType <- data.frame(CHROM = character(1),\n                                        POS = numeric(1),\n                                        REF = character(1),\n                                        ALT = character(1),\n                                        GT = character(1),\n                                        ANN = character(1),\n                                      CHRPOS = character(1))\n          temp_GenoType$CHROM <- Record$CHROM[kd]\n          temp_GenoType$POS <- Record$POS[kd]\n          temp_GenoType$REF <- Record$REF[kd]\n          temp_GenoType$ALT <- Record$ALT[kd]\n          temp_GenoType$GT <- ifelse(type == \"D\", paste0(Record$GT2[kd], \"-\"), paste0(\"-\", Record$GT2[kd]))\n          temp_GenoType$ANN <- Record$ANN2[kd]\n          temp_GenoType$CHRPOS <- Record$CHRPOS[kd]\n          paired_GenoType <- rbind(paired_GenoType, temp_GenoType)\n          \n        }\n      }\n    }else{\n      \n      paired_GenoType <-  Record[, c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"GT2\", \"ANN2\")]\n      colnames(paired_GenoType) <- c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"GT\", \"ANN\")\n      if(type == 'D'){\n        paired_GenoType$GT <- paste0(paired_GenoType$GT, '-')\n      }else{\n        paired_GenoType$GT <- paste0('-',paired_GenoType$GT)\n      }\n      \n    }\n  }\n  \n  colName <- paste0(Available_paired_table$GroupType[id], \"_\", Available_paired_table$GroupID[id])\n  if(length(GeneGenoType_List$CHROM) >0){\n    List_CHRPOS <- sapply(1:dim(GeneGenoType_List)[1], function(x) paste0(GeneGenoType_List$CHROM[x], \"-\",GeneGenoType_List$POS[x]))\n    \n    eval(parse(text=paste0(\"GeneGenoType_List$\", colName, \" <- ''\")))\n    \n    for(kd in 1:dim(paired_GenoType)[1]){\n      kdx <- which(List_CHRPOS %in% paired_GenoType$CHRPOS[kd])\n      if(length(kdx) == 1){ \n        \n        eval(parse(text=paste0(\"GeneGenoType_List$\", colName, \"[\", as.character(kdx),\"] <- paired_GenoType$GT[kd]\")))\n        \n      }else{\n        temp_GenoType <- data.frame(CHROM = character(1),\n                                    POS = numeric(1),\n                                    REF = character(1),\n                                    ALT = character(1),\n                                    ANN = character(1),\n                                    CHRPOS = character(1))\n        temp_GenoType$CHROM <- paired_GenoType$CHROM[kd]\n        temp_GenoType$POS <- paired_GenoType$POS[kd]\n        temp_GenoType$REF <- paired_GenoType$REF[kd]\n        temp_GenoType$ALT <- paired_GenoType$ALT[kd]\n        temp_GenoType$GT <- paired_GenoType$GT[kd]\n        temp_GenoType$ANN <- paired_GenoType$ANN[kd]\n        temp_GenoType$CHRPOS <- paired_GenoType$CHRPOS[kd]\n        #rbind(temp_GenoType, GeneGenoType_List, stringsAsFactors=FALSE)\n        GeneGenoType_List[nrow(GeneGenoType_List)+1, c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"ANN\")] <- temp_GenoType[c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"ANN\")]\n        \n        eval(parse(text=paste0(\"GeneGenoType_List$\", colName, \"[\", as.character(nrow(GeneGenoType_List)),\"] <- temp_GenoType$GT\")))\n        \n      }\n    }\n    \n    \n  }else{\n    \n    GeneGenoType_List <- paired_GenoType[, c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"ANN\", \"GT\")]\n    colnames(GeneGenoType_List)[dim(GeneGenoType_List)[2]] <- colName\n  }\n  \n}\nsave(GeneGenoType_List, file = paste0(outputFp, GeneName, \"_DRpair_genotypes.RData\"))\n\nwrite.csv(GeneGenoType_List, file = paste0(outputFp, GeneName, \"_DRpair_genotypes.csv\"))\nwrite.table(GeneGenoType_List, file = paste0(outputFp, GeneName, \"_DRpair_genotypes.txt\"), sep = \"\\t\", row.names = F)\n",
    "created" : 1508210957043.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2553276867",
    "id" : "E314022A",
    "lastKnownWriteTime" : 1508274054,
    "last_content_update" : 1508274054715,
    "path" : "~/Documents/NGSProject/2017WGS/R/GeneGeneInteraction_HSCT/Test_ExtractedGene.R",
    "project_path" : "Test_ExtractedGene.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}