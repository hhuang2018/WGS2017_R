R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
D_GT
R_GT
length(intersect(D_GT, R_GT))
R_GT == D_GT
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(D_GT == R_GT){
Gene_SNP_numeric[id, jd] <- 0
}else{
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
# same genotype --- 0
# 1 mismatch ------ 1
# 2 mismatches ---- 2
Gene_SNP_numeric[id, jd] <- 2 - length(intersect(D_GT, R_GT))
}
}
D_GT
R_GT
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT) | is.na(R_GT)){
Gene_SNP_numeric[id, jd] <- 4
}else if(D_GT == R_GT){
Gene_SNP_numeric[id, jd] <- 0
}else{
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
# same genotype --- 0
# 1 mismatch ------ 1
# 2 mismatches ---- 2
Gene_SNP_numeric[id, jd] <- 2 - length(intersect(D_GT, R_GT))
}
}
Gene_SNP_numeric[id,]
Gene_SNP_numeric <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
for(id in 1:numSamp){
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT) | is.na(R_GT)){
Gene_SNP_numeric[id, jd] <- 4
}else if(D_GT == R_GT){
Gene_SNP_numeric[id, jd] <- 0
}else{
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
# same genotype --- 0
# 1 mismatch ------ 1
# 2 mismatches ---- 2
Gene_SNP_numeric[id, jd] <- 2 - length(intersect(D_GT, R_GT))
}
}
}
Gene_SNP_numeric
CLD.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,n.perm=2000)
print(as(gene.pair$G1, 'numeric'))
print(as(gene.pair$G1[1:10, 1:10], 'numeric'))
print(as(gene.pair$G1[1:10, ], 'numeric'))
print(as(gene.pair$G2[1:10, ], 'numeric'))
GVHD_Label
SNPName
Gene_SNP_numeric
colnames(Gene_SNP_numeric) <- SNPName
rownames(Gene_SNP_numeric) <- Samples
head(Gene_SNP_numeric)
geneMat <- function(GeneName, GENE_list){
Samples <- colnames(GENE_list)[-(1:5)]
numSamp <- length(Samples)
numSNV <- dim(GENE_list)[1]
Gene_SNP_numeric <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
for(id in 1:numSamp){
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT) | is.na(R_GT)){
Gene_SNP_numeric[id, jd] <- 4
}else if(D_GT == R_GT){
Gene_SNP_numeric[id, jd] <- 0
}else{
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
# same genotype --- 0
# 1 mismatch ------ 1
# 2 mismatches ---- 2
Gene_SNP_numeric[id, jd] <- 2 - length(intersect(D_GT, R_GT))
}
}
}
colnames(Gene_SNP_numeric) <- SNPName
rownames(Gene_SNP_numeric) <- Samples
}
geneMat <- function(GeneName, GENE_list){
Samples <- colnames(GENE_list)[-(1:5)]
numSamp <- length(Samples)
numSNV <- dim(GENE_list)[1]
Gene_SNP_numeric <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
for(id in 1:numSamp){
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT) | is.na(R_GT)){
Gene_SNP_numeric[id, jd] <- 4
}else if(D_GT == R_GT){
Gene_SNP_numeric[id, jd] <- 0
}else{
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
# same genotype --- 0
# 1 mismatch ------ 1
# 2 mismatches ---- 2
Gene_SNP_numeric[id, jd] <- 2 - length(intersect(D_GT, R_GT))
}
}
}
colnames(Gene_SNP_numeric) <- SNPName
rownames(Gene_SNP_numeric) <- Samples
return(list(Gene_mat = Gene_SNP_numeric, Label = GVHD_Label))
}
IL10_Gene_List <- geneMat("IL10", IL10_list)
IL10RB_Gene_List <- geneMat("IL10RB", IL10RB_list)
Gene1 <- new("SnpMatrix", IL10_Gene_List$Gene_mat)
print(as(Gene1[1:10,1:10], 'numeric'))
print(as(Gene1[1:10,1:10], 'character'))
IL10_Gene_List$Gene_mat[1:10, 1:10]
geneMat <- function(GeneName, GENE_list){
Samples <- colnames(GENE_list)[-(1:5)]
numSamp <- length(Samples)
numSNV <- dim(GENE_list)[1]
Gene_SNP_numeric <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
for(id in 1:numSamp){
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT) | is.na(R_GT)){
Gene_SNP_numeric[id, jd] <- 4
}else if(D_GT == R_GT){
Gene_SNP_numeric[id, jd] <- 1
}else{
if(is.na(D_GT)){
D_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
D_GT <- strsplit(D_GT, '/')[[1]]
}
if(is.na(R_GT)){
R_GT <- c(GENE_list$REF[jd], GENE_list$REF[jd])
}else{
R_GT <- strsplit(R_GT, '/')[[1]]
}
# same genotype --- 0  1
# 1 mismatch ------ 1  2
# 2 mismatches ---- 2  3
Gene_SNP_numeric[id, jd] <- 3 - length(intersect(D_GT, R_GT))
}
}
}
colnames(Gene_SNP_numeric) <- SNPName
rownames(Gene_SNP_numeric) <- Samples
return(list(Gene_mat = Gene_SNP_numeric, Label = GVHD_Label))
}
IL10_Gene_List <- geneMat("IL10", IL10_list)
IL10RB_Gene_List <- geneMat("IL10RB", IL10RB_list)
Gene1 <- new("SnpMatrix", IL10_Gene_List$Gene_mat)
print(as(Gene1[1:10, 1:10], 'character'))
IL10_Gene_List$Gene_mat[1:10, 1:10]
Gene2 <- new("SnpMatrix", IL10RB_Gene_List$Gene_mat)
typeof(gene.pair$Y)
gene.pair$Y
gene.pair$Y[1]
typeof(gene.pair$Y[1])
Label <- as.factor(IL10_Gene_List$Label)
typeof(Label)
Label
Label <- as.factor(IL10_Gene_List$Label)
Label1 <- as.factor(IL10_Gene_List$Label)
Label2 <- as.factor(IL10RB_Gene_List$Label)
Label1 == Label2
Label <- as.factor(IL10_Gene_List$Label)
PCA.test(Y=Label, G1=Gene1, G2=Gene2,threshold=0.7,
method="GenFreq")
CLD.test(Y=Label, G1=Gene1,G2=Gene2,n.perm=2000)
CLD.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,n.perm=2000)
PCA.test(Y=gene.pair$Y, G1=gene.pair$G1, G2=gene.pair$G2,threshold=0.7,
method="GenFreq")
PCA.test(Y=gene.pair$Y, G1=gene.pair$G1, G2=gene.pair$G2,threshold=0.7,
method="Std")
set.seed(1234)
CCA.test(Y=gene.pair$Y, G1=gene.pair$G1, G2=gene.pair$G2,n.boot=500)
set.seed(1234)
KCCA.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,
kernel="rbfdot",sigma = 0.05,n.boot=500)
IL10_Gene_List$Gene_mat[1]
IL10_Gene_List$Gene_mat[:,1]
IL10_Gene_List$Gene_mat[,1]
dim(IL10_Gene_List$Gene_mat)[2]
is.na(IL10_Gene_List$Gene_mat[,jd])
which(is.na(IL10_Gene_List$Gene_mat[,jd]))
length(which(is.na(IL10_Gene_List$Gene_mat[,jd])))
rm_ids <- vector(mode = "numeric", length=0)
rm_ids
c(rm_ids, 1)
rm_ids <- c(rm_ids, id)
rm_ids
id
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(is.na(IL10_Gene_List$Gene_mat[,jd]))) > dim(IL10_Gene_List$Gene_mat)[1]*0.5){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
dim(IL10_Gene_List$Gene_mat)[1]*0.25
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(is.na(IL10_Gene_List$Gene_mat[,id]))) > dim(IL10_Gene_List$Gene_mat)[1]*0.5){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(is.na(IL10_Gene_List$Gene_mat[,id]))) > dim(IL10_Gene_List$Gene_mat)[1]*0.25){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(is.na(IL10_Gene_List$Gene_mat[,id]))) > dim(IL10_Gene_List$Gene_mat)[1]*0.1){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
dim(IL10_Gene_List$Gene_mat)[1]*0.1
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(is.na(IL10_Gene_List$Gene_mat[,id]))) > 10){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
length(which(is.na(IL10_Gene_List$Gene_mat[,id])))
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(is.na(IL10_Gene_List$Gene_mat[,id]))) > 1){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
IL10_Gene_List$Gene_mat
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(IL10_Gene_List$Gene_mat[,id] == 4)) > 50){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
len(rm_ids)
length(rm_ids)
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10RB_Gene_List$Gene_mat)[2]){
if(length(which(IL10RB_Gene_List$Gene_mat[,id] == 4)) > 50){
rm_ids <- c(rm_ids, id)
}
}
rm_ids
length(rm_ids)
dim(IL10RB_Gene_List$Gene_mat)[2]
filtered_IL10RB_SNV <- IL10RB_Gene_List$Gene_mat[, -rm_ids]
Gene1_filtered <- new("SnpMatrix", filtered_IL10_SNV)
filtered_IL10_SNV <- IL10_Gene_List$Gene_mat[, -rm_ids]
filtered_IL10RB_SNV <- IL10RB_Gene_List$Gene_mat[, -rm_ids]
Gene1_filtered <- new("SnpMatrix", filtered_IL10_SNV)
Gene2_filtered <- new("SnpMatrix", filtered_IL10RB_SNV)
PCA.test(Y=Label, G1=Gene1_filtered, G2=Gene2_filtered,threshold=0.7,
method="GenFreq")
CLD.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered, n.perm=2000)
CLD.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered, n.perm=100)
GBIGM.test(Y=gene.pair$Y, G1=Gene1_filtered,G2=Gene2_filtered,n.perm=2000)
GBIGM.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,n.perm=2000)
GBIGM.test(Y=Label, G1=Gene1,G2=Gene2,n.perm=2000)
minP.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered)
gates.test(Y=gene.pair$Y, G1=Gene1_filtered,G2=Gene2_filtered,me.est="ChevNy")
gates.test(Y=gene.pair$Y, G1=Gene1_filtered,G2=Gene2_filtered,alpha=0.05,me.est="Keff")
gates.test(Y=gene.pair$Y, G1=Gene1_filtered,G2=Gene2_filtered,me.est="LiJi")
gates.test(Y=gene.pair$Y, G1=Gene1_filtered,G2=Gene2_filtered,me.est="Galwey")
gates.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,me.est="ChevNy")
gates.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,alpha=0.05,me.est="Keff")
gates.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,me.est="LiJi")
gates.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,me.est="Galwey")
tTS.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,tau=0.5,n.sim=10000)
tProd.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered,tau=0.05,n.sim=1000)
IL10_Gene_List
filtered_IL10_SNV
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(IL10_Gene_List$Gene_mat[,id] == 4)) > 20){
rm_ids <- c(rm_ids, id)
}
}
length(rm_ids)
filtered_IL10_SNV <- IL10_Gene_List$Gene_mat[, -rm_ids]
rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10RB_Gene_List$Gene_mat)[2]){
if(length(which(IL10RB_Gene_List$Gene_mat[,id] == 4)) > 20){
rm_ids <- c(rm_ids, id)
}
}
filtered_IL10RB_SNV <- IL10RB_Gene_List$Gene_mat[, -rm_ids]
Gene1_filtered <- new("SnpMatrix", filtered_IL10_SNV)
Gene2_filtered <- new("SnpMatrix", filtered_IL10RB_SNV)
dim(filtered_IL10RB_SNV)
CLD.test(Y=Label, G1=Gene1_filtered,G2=Gene2_filtered, n.perm=1000)
GeneName
DR_GT
Samples <- colnames(GENE_list)[-(1:5)]
numSamp <- length(Samples)
numSNV <- dim(GENE_list)[1]
Gene_SNP_donor <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
Gene_SNP_recipient <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
id < -1
id <- 1
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
GVHD_Label[id]
jd <- 1
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
DR_GT
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
D_GT
R_GT
DR_GenoType <- function(GeneName, GENE_list){
Samples <- colnames(GENE_list)[-(1:5)]
numSamp <- length(Samples)
numSNV <- dim(GENE_list)[1]
Gene_SNP_donor <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
Gene_SNP_recipient <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
for(id in 1:numSamp){
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
Gene_SNP_donor[id, jd] <- strsplit(DR_GT, "-")[[1]][1]
Gene_SNP_recipient[id, jd] <- strsplit(DR_GT, "-")[[1]][2]
}
}
colnames(Gene_SNP_donor) <- SNPName
rownames(Gene_SNP_donor) <- Samples
colnames(Gene_SNP_recipient) <- SNPName
rownames(Gene_SNP_recipient) <- Samples
return(list(Donor = Gene_SNP_donor, Recipient = Gene_SNP_recipient, Label = GVHD_Label))
}
IL10_Donor <- DR_GenoType("IL10", IL10_list)
IL10_Gene_List_GT <- DR_GenoType("IL10", IL10_list)
IL10_Donor <- IL10_Gene_List_GT$Donor
IL10_Recipient <- IL10_Gene_List_GT$Recipient
IL10RB_Gene_List_GT <- DR_GenoType("IL10RB", IL10RB_list)
IL10RB_Donor <- IL10RB_Gene_List_GT$Donor
IL10RB_Recipient <- IL10RB_Gene_List_GT$Recipient
IL10_Recipient
DR_GenoType <- function(GeneName, GENE_list){
Samples <- colnames(GENE_list)[-(1:5)]
numSamp <- length(Samples)
numSNV <- dim(GENE_list)[1]
Gene_SNP_donor <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
Gene_SNP_recipient <- matrix(data = NA, nrow = numSamp, ncol = numSNV)
GVHD_Label <- vector(mode = "character", length = numSamp)
SNPName <- vector(mode = "character", length = numSNV)
for(id in 1:numSamp){
GVHD_Label[id] <- strsplit(Samples[id], "_")[[1]][1]
for(jd in 1:numSNV){
SNPName[jd] <- paste0(GeneName, "-", GENE_list$CHROM[jd], "-", GENE_list$POS[jd])
DR_GT <- unlist(GENE_list[Samples[id]])[jd]
D_GT <- strsplit(DR_GT, "-")[[1]][1]
R_GT <- strsplit(DR_GT, "-")[[1]][2]
if(is.na(D_GT)){
Gene_SNP_donor[id, jd] <- paste0(GENE_list$REF[jd], "/", GENE_list$REF[jd])
}else{
Gene_SNP_donor[id, jd] <- D_GT
}
if(is.na(R_GT)){
Gene_SNP_recipient[id, jd] <- paste0(GENE_list$REF[jd], "/", GENE_list$REF[jd])
}else{
Gene_SNP_recipient[id, jd] <- R_GT
}
}
}
colnames(Gene_SNP_donor) <- SNPName
rownames(Gene_SNP_donor) <- Samples
colnames(Gene_SNP_recipient) <- SNPName
rownames(Gene_SNP_recipient) <- Samples
return(list(Donor = Gene_SNP_donor, Recipient = Gene_SNP_recipient, Label = GVHD_Label))
}
IL10_Gene_List_GT <- DR_GenoType("IL10", IL10_list)
IL10_Donor <- IL10_Gene_List_GT$Donor
IL10_Recipient <- IL10_Gene_List_GT$Recipient
IL10_Recipient
IL10RB_Gene_List_GT <- DR_GenoType("IL10RB", IL10RB_list)
IL10RB_Donor <- IL10RB_Gene_List_GT$Donor
IL10RB_Recipient <- IL10RB_Gene_List_GT$Recipient
IL10RB_rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10RB_Gene_List$Gene_mat)[2]){
if(length(which(IL10RB_Gene_List$Gene_mat[,id] == 4)) > 20){
IL10RB_rm_ids <- c(IL10RB_rm_ids, id)
}
}
IL10_rm_ids <- vector(mode = "numeric", length=0)
for(id in 1:dim(IL10_Gene_List$Gene_mat)[2]){
if(length(which(IL10_Gene_List$Gene_mat[,id] == 4)) > 20){
IL10_rm_ids <- c(IL10_rm_ids, id)
}
}
Gene1_Recipient <- new("SnpMatrix", IL10_Recipient)
Gene1_Recipient
Gene2_Donor <- new("SnpMatrix", IL10RB_Donor)
PCA.test(Y=Label, G1=Gene1_Recipient, G2=Gene2_Donor,threshold=0.7,
method="GenFreq")
PCA.test(Y=gene.pair$Y, G1=Gene1_Recipient, G2=Gene2_Donor, threshold=0.7,
method="Std")
CLD.test(Y=Label, G1=Gene1_Recipient,G2=Gene2_Donor, n.perm=1000)
IL10RB_Gene_List_GT <- DR_GenoType("IL10RB", IL10RB_list)
IL10RB_Donor <- IL10RB_Gene_List_GT$Donor
IL10RB_Recipient <- IL10RB_Gene_List_GT$Recipient
Gene1_Recipient <- new("SnpMatrix", IL10_Recipient)
Gene2_Donor <- new("SnpMatrix", IL10RB_Donor)
PCA.test(Y=Label, G1=Gene1_Recipient, G2=Gene2_Donor,threshold=0.7,
method="GenFreq")
Gene1_Recipient
print(as(Gene1_Recipient, 'character'))
load("../Output/all_snpEff_stats.RData")
